##First, run populations

#PBS -N populations
#PBS -l select=1:ncpus=1:mem=20gb:scratch_local=30gb
#PBS -l walltime=00:30:00

module add stacks
populations -P  /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/gstacks_output \
-O /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/populations_output \
-t 2 -M /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/popmap_paphia.txt --structure --plink --vcf

##Second, run plink for filtering SNPs and create whitelist of SNPs to keep
##plink: fast, no need to qsub
#--geno = missing data rate
#--maf = minimum allele frequency 

module add plink-1.90
plink --file populations.plink --geno 0.20 --maf 0.05 --out plink_geno20_maf05 --recode --allow-extra-chr 

cut -f 2 plink_geno50_maf05.map | sed 's/_/\t/' > SNP_whitelist.txt

##Third, rerun populations using the whitelist
#PBS -N populations
#PBS -l select=1:ncpus=1:mem=20gb:scratch_local=30gb
#PBS -l walltime=00:30:00

module add stacks
populations -P  /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/gstacks_output \
-O /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/populations_output_geno20_maf05 \
-W /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/populations_output/SNP_whitelist.txt \
-t 2 -M /storage/brno12-cerit/home/alena_bartonova/RAD_Paph_Lim/paphia_gstacks/popmap_paphia.txt --structure --plink --vcf

##outputs can be used for downstream analyses
## for removing individuals, we need to run gstacks again with a new popmap
